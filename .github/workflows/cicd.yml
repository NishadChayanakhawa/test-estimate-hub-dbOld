name: Verify API

on: 
  push:
    branches:
      - master
      - 'release/**'
      - 'feature/**'

jobs:
  API-Test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Test
      run: mvn clean verify -Pdev

    - name: Archive test execution results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: api-test-report
        path: target/TestExecutionReport.html
    
    - name: SonarCloud Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn sonar:sonar -Dsonar.projectKey=test-estimate-hub -Dsonar.organization=nishadchayanakhawa -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN

  UI-Test:
    runs-on: ubuntu-latest
    needs: API-Test
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Test
      run: mvn clean verify -Pqa

    - name: Archive test execution results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ui-test-report.html
        path: target/TestExecutionReport.html
        
  Deploy-Docker:
    runs-on: ubuntu-latest
    needs: UI-Test
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Test
      run: mvn clean install -Pprod

    - name: Get version
      run: echo ::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
      id: project

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and push as latest
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/test-estimate-hub:latest
    - name: Build and push by version
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/test-estimate-hub:${{ steps.project.outputs.version }}
